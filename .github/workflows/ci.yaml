name: CI

"on": [push]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - 3.9

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.2

      - name: Install tox
        run: pip install tox

      - name: Cache tox environments
        id: cache-tox
        uses: actions/cache@v2
        with:
          path: .tox
          # requirements/*.txt and pyproject.toml have versioning info
          # that would impact the tox environment.
          key: tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-

      - name: Run tox
        run: tox -e py,coverage-report,typing

  build:
    runs-on: ubuntu-latest
    needs: [test]

    # Only do Docker builds of ticket branches and tagged releases.
    if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/tickets/')

    steps:
      - uses: actions/checkout@v2

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(scripts/docker-tag.sh "$GITHUB_REF")

      - name: Print the tag
        id: print
        run: echo ${{ steps.vars.outputs.tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys:
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lsstsqre/kafkaaggregator:${{ steps.vars.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install tox and LTD Conveyor
        run: pip install tox ltd-conveyor
      - name: Install graphviz
        run: sudo apt-get install graphviz
      - name: Run tox
        run: tox -e docs
      - name: Upload to LSST the Docs
        env:
          LTD_USERNAME: ${{ secrets.LTD_USERNAME }}
          LTD_PASSWORD: ${{ secrets.LTD_PASSWORD }}
        run: ltd upload --product kafka-aggregator --gh --dir docs/_build/html

  pypi:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # full history for setuptools_scm
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Python install
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install --upgrade setuptools wheel
      - name: Build a binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_SQRE_ADMIN }}
